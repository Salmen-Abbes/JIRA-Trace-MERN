<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<document>
  <content>&lt;p&gt;Stored Procedures and Functions &lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Procedures:&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EXE1*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;CREATE OR REPLACE PROCEDURE Remove_pilot(v_pilot in pilot.nopilot%type) IS&lt;/p&gt;&lt;p&gt;BEGIN&lt;/p&gt;&lt;p&gt;DELETE FROM pilot&lt;/p&gt;&lt;p&gt;WHERE nopilot=v_pilot;&lt;/p&gt;&lt;p&gt;COMMIT;&lt;/p&gt;&lt;p&gt;END Remove_pilot;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Accept nopilot prompt ‘please enter the number of pilot to be deleted:’&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;EXECUTE  Remove_pilot (&amp;amp;nopilot) ;    ---3465&lt;/p&gt;&lt;ol&gt;&lt;li&gt;SELECT * FROM pilot;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EXE2*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;create or replace procedure comm_pilot&lt;/p&gt;&lt;p&gt;(v_pilot IN pilot.nopilot%type, txcomm  IN float)&lt;/p&gt;&lt;p&gt;is&lt;/p&gt;&lt;p&gt;v_comm Pilot.comm%type;&lt;/p&gt;&lt;p&gt;begin&lt;/p&gt;&lt;p&gt;select comm&lt;/p&gt;&lt;p&gt;Into v_comm&lt;/p&gt;&lt;p&gt;From pilot&lt;/p&gt;&lt;p&gt;Where nopilot=v_pilot;&lt;/p&gt;&lt;p&gt;DBMS_OUTPUT.PUT_LINE(‘The commission value before update: ’||v_comm);&lt;/p&gt;&lt;p&gt;If v_comm is null then &lt;/p&gt;&lt;p&gt;DBMS_OUTPUT.PUT_LINE(‘Commission is null’);&lt;/p&gt;&lt;p&gt;Else&lt;/p&gt;&lt;p&gt;Update pilot&lt;/p&gt;&lt;p&gt;Set comm=comm*txcomm&lt;/p&gt;&lt;p&gt;Where nopilot= v_pilot;&lt;/p&gt;&lt;p&gt;select comm&lt;/p&gt;&lt;p&gt;Into v_comm&lt;/p&gt;&lt;p&gt;From pilot&lt;/p&gt;&lt;p&gt;Where nopilot=v_pilot;&lt;/p&gt;&lt;p&gt;DBMS_OUTPUT.PUT_LINE(‘The commission value after update : ’||v_comm);&lt;/p&gt;&lt;p&gt;End if;&lt;/p&gt;&lt;p&gt;COMMIT;&lt;/p&gt;&lt;p&gt;End comm_pilot;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;EXECUTE  comm_pilot(’6589’, 1.1) ;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;/*2&lt;sup&gt;nd&lt;/sup&gt; solution*/&lt;/p&gt;&lt;p&gt;---THE RATE ENTERED BY THE USER&lt;/p&gt;&lt;p&gt;                  Accept txtrate prompt ‘please enter the rate:’&lt;/p&gt;&lt;p&gt;                  EXECUTE  comm_pilot(’6589’, &amp;amp;txtrate) ;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;EXECUTE  comm_pilot('3452', 1.2) ;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;/*2&lt;sup&gt;nd&lt;/sup&gt; solution*/&lt;/p&gt;&lt;p&gt;---THE RATE AND YHE NUMBER OF THE PILOT ARE ENTERED BY THE USER&lt;/p&gt;&lt;p&gt;                  Accept txtrate prompt ‘please enter the rate:’&lt;/p&gt;&lt;p&gt;                 Accept nopilot prompt ‘please enter the number of the pilot:’&lt;/p&gt;&lt;p&gt;                  EXECUTE  comm_pilot(&amp;amp;nopilot, &amp;amp;txtrate) ;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;SELECT * FROM pilot;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EXE3*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select text  from user_source where name = 'REMOVE_PILOT';&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EXE4*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select * from user_objects;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EXE5*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select object_name from user_objects  where object_type = 'TABLE';&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EXE6*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select object_name from user_objects  where object_type = 'PROCEDURE';&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EXE7*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select object_name from all_objects  where object_type = 'PROCEDURE';&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Functions:&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EX1*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;CREATE OR REPLACE FUNCTION max_hour_flight_type (v_type Device.codetype%type)&lt;/p&gt;&lt;p&gt;RETURN NUMBER IS&lt;/p&gt;&lt;p&gt;V_nbhflight plane.nbhflight%type;&lt;/p&gt;&lt;p&gt;BEGIN&lt;/p&gt;&lt;p&gt;Select max(nbhflight)&lt;/p&gt;&lt;p&gt;Into V_ nbhflight&lt;/p&gt;&lt;p&gt;FROM plane&lt;/p&gt;&lt;p&gt;WHERE  type = v_type;&lt;/p&gt;&lt;p&gt;RETURN(V_ nbhflight);&lt;/p&gt;&lt;p&gt;END max_hour_flight_type;&lt;/p&gt;&lt;p&gt;/&lt;/p&gt;&lt;ol&gt;&lt;li&gt;variable Max_nbhflight NUMBER;&lt;/li&gt;&lt;li&gt;execute :Max_nbhflight := max_hour_flight_type ('734');&lt;/li&gt;&lt;li&gt;print Max_nbhflight;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;/*2&lt;sup&gt;nd&lt;/sup&gt; solution*/&lt;/p&gt;&lt;p&gt;codetype entered by the user&lt;/p&gt;&lt;p&gt;ACCEPT CODETYPE PROMPT ‘PLEASE ENTER THE TYPE OF THE PLANE :’&lt;/p&gt;&lt;p&gt;variable Max_nbhflight NUMBER;&lt;/p&gt;&lt;p&gt;execute :Max_nbhflight := max_hour_flight_type (&amp;amp;CODETYPE);&lt;/p&gt;&lt;p&gt;print Max_nbhflight;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EX2*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;CREATE OR REPLACE FUNCTION pilot_plane_driven (v_nopilot pilot.nopilot%type)&lt;/p&gt;&lt;p&gt;RETURN NUMBER IS&lt;/p&gt;&lt;p&gt;Number_plane integer;&lt;/p&gt;&lt;p&gt;BEGIN&lt;/p&gt;&lt;p&gt;Select COUNT(Distinct plane)&lt;/p&gt;&lt;p&gt;Into Number_plane &lt;/p&gt;&lt;p&gt;FROM assignation&lt;/p&gt;&lt;p&gt;Where pilot= v_nopilot;&lt;/p&gt;&lt;p&gt;RETURN(Number_plane);&lt;/p&gt;&lt;p&gt;END pilot_plane_driven;&lt;/p&gt;&lt;p&gt;/&lt;/p&gt;&lt;ol&gt;&lt;li&gt;variable nbrplane number;&lt;/li&gt;&lt;li&gt;execute :nbrplane:= pilot_plane_driven('6723'); --&amp;amp;v_nopilot&lt;/li&gt;&lt;li&gt;print nbrplane;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EX3*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select object_name from all_objects  where object_type = 'FUNCTION';&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EX4*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;select object_name from user_objects  where object_type = 'FUNCTION';&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Triggers:&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;/*EXE 1*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;CREATE OR REPLACE TRIGGER Insert_pilot&lt;/p&gt;&lt;p&gt;BEFORE INSERT ON pilot&lt;/p&gt;&lt;p&gt;FOR EACH ROW&lt;/p&gt;&lt;p&gt;BEGIN&lt;/p&gt;&lt;p&gt;   IF (:NEW.sal &amp;lt; 300.00)&lt;/p&gt;&lt;p&gt;   THEN&lt;/p&gt;&lt;p&gt;      :NEW.sal := 700.00;&lt;/p&gt;&lt;p&gt;   END IF;&lt;/p&gt;&lt;p&gt;END;&lt;/p&gt;&lt;p&gt;/&lt;/p&gt;&lt;p&gt;&lt;strong&gt;/*EXE 2*/&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;CREATE OR REPLACE TRIGGER Hiring_pilot&lt;/p&gt;&lt;p&gt;AFTER INSERT OR UPDATE OF hir_date ON pilot&lt;/p&gt;&lt;p&gt;FOR EACH ROW &lt;/p&gt;&lt;p&gt;BEGIN &lt;/p&gt;&lt;p&gt;    IF (:new. hir_date &amp;gt; sysdate) THEN &lt;/p&gt;&lt;p&gt;        RAISE_APPLICATION_ERROR(-20000, ‘The date is over the system date’); &lt;/p&gt;&lt;p&gt;    END IF; &lt;/p&gt;&lt;p&gt;END; &lt;/p&gt;&lt;p&gt;/&lt;/p&gt;</content>
</document>